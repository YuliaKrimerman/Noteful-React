{"version":3,"sources":["Sidebar/Sidebar.js","NotefulContext/NotefulContext.js","NotesList/NotesList.js","AddNote/AddNote.js","AddFolder/AddFolder.js","Note/Note.js","SidebarNote/SidebarNote.js","ErrorBoundary/ErrorBoundary.js","App.js","index.js"],"names":["Sidebar","props","folders","map","file","react_default","a","createElement","NavLink","to","concat","id","key","className","folder_name","Link","NotefulContext","React","createContext","notes","addFolder","addNote","deleteNote","NotesList","filteredNotes","_this","context","filter","note","folder_id","Number","match","params","folderId","note_name","undefined","console","log","this","Component","contextType","AddNote","handleClickCancel","history","push","submitNewNote","e","preventDefault","target","name","value","folder","content","description","fetch","method","body","JSON","stringify","headers","Content-Type","then","res","ok","json","error","data","catch","onSubmit","htmlFor","type","required","onClick","AddFolder","submitNewFolder","folderDataRes","Note","find","noteId","modifiedDate","Date","date_created","toDateString","callback","goback","content-type","Promise","reject","SidebarNote","handleBackCancel","goBack","findFolderName","folderName","App","state","setState","Object","toConsumableArray","_this2","all","_ref","_ref2","slicedToArray","notesRes","foldersRes","_ref3","_ref4","_this3","contextValue","NotefulContext_NotefulContext","Provider","Route","exact","path","render","src_Sidebar_Sidebar","component","ReactDOM","BrowserRouter","src_App_0","document","getElementById"],"mappings":"kaA6BeA,MAxBf,SAAiBC,GAEb,IAAMC,EAAUD,EAAMC,QAAQC,IAAI,SAAAC,GAAI,OAClCC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASC,GAAE,WAAAC,OAAaN,EAAKO,IAAMC,IAAKR,EAAKO,IACzCN,EAAAC,EAAAC,cAAA,MACIK,IAAKR,EAAKO,GACVE,UAAU,WAETT,EAAKU,gBAKlB,OACIT,EAAAC,EAAAC,cAAA,OAAKI,GAAG,WACJN,EAAAC,EAAAC,cAAA,UACKL,GAELG,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAMN,GAAG,eAAT,gBCbGO,SARQC,IAAMC,cAAc,CACvChB,QAAS,GACTiB,MAAO,GACPC,UAAW,aACXC,QAAS,aACTC,WAAY,gBCAVC,6MAIFC,cAAgB,kBAAMC,EAAKC,QAAQP,MAAMQ,OAAO,SAAAC,GAAI,OAAIA,EAAKC,YAAcC,OAAOL,EAAKxB,MAAM8B,MAAMC,OAAOC,YAAY9B,IAAK,SAAAyB,GAAI,OAC3HvB,EAAAC,EAAAC,cAAA,MACIK,IAAKgB,EAAKjB,IAEVN,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAMN,GAAE,SAAAC,OAAWkB,EAAKjB,KAAMN,EAAAC,EAAAC,cAAA,UAAKqB,EAAKM,YACxC7B,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAMN,GAAE,SAAAC,OAAWkB,EAAKjB,KAAMN,EAAAC,EAAAC,cAAA,gCAKtCY,MAAQ,WACJ,YAAwCgB,IAArCV,EAAKxB,MAAM8B,MAAMC,OAAOC,SAChBR,EAAKC,QAAQP,MAAMhB,IAAK,SAAAyB,GAAI,OAC/BvB,EAAAC,EAAAC,cAAA,MACIK,IAAKgB,EAAKjB,IAEVN,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAMN,GAAE,SAAAC,OAAWkB,EAAKjB,KAAMN,EAAAC,EAAAC,cAAA,UAAKqB,EAAKM,YACxC7B,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAMN,GAAE,SAAAC,OAAWkB,EAAKjB,KAAMN,EAAAC,EAAAC,cAAA,6BAG3BkB,EAAKD,yFASpB,OAHAY,QAAQC,WAAWC,KAAKrC,MAAM8B,MAAMC,OAAOC,UAC3CG,QAAQC,IAAIC,KAAKZ,QAAQP,MAAMhB,IAAI,SAAAyB,GAAI,cAAWA,EAAKC,aAGnDxB,EAAAC,EAAAC,cAAA,eACIF,EAAAC,EAAAC,cAAA,MAAIM,UAAU,kBACTyB,KAAKnB,SAEVd,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAMN,GAAG,aAAT,oBAtCQQ,IAAMsB,WAAxBhB,EAEKiB,YAAcxB,EA2CVO,QC/CTkB,oNACFC,kBAAoB,WAChBjB,EAAKxB,MAAM0C,QAAQC,KAAK,QAK5BC,cAAgB,SAACC,GACbA,EAAEC,iBAEF,IAAMnB,EAAO,CACTM,UAAaY,EAAEE,OAAOC,KAAKC,MAC3BrB,UAAaiB,EAAEE,OAAOG,OAAOD,MAC7BE,QAAWN,EAAEE,OAAOK,YAAYH,OAGpCd,QAAQC,IAAIT,GAEZ0B,MAAK,sDAAwD,CACzDC,OAAQ,OACRC,KAAMC,KAAKC,UAAU9B,GACrB+B,QAAS,CACLC,eAAgB,sBAGvBC,KAAK,SAAAC,GACF,OAAKA,EAAIC,GAOFD,EAAIE,OALJF,EAAIE,OAAOH,KAAK,SAAAI,GAEnB,MAAMA,MAKbJ,KAAK,SAAAK,GACJzC,EAAKC,QAAQL,QAAQ6C,GACrBzC,EAAKxB,MAAM0C,QAAQC,KAAnB,WAAAlC,OAAmCwD,EAAKrC,cAEzCsC,MAAM,SAAAF,GACL7B,QAAQ6B,MAAM,CAAEA,qFAMlB,IAAM/D,EAAUoC,KAAKZ,QAAQxB,QAAQC,IAAI,SAAAgD,GAAM,OAAI9C,EAAAC,EAAAC,cAAA,UAAQK,IAAKuC,EAAOxC,GAAIuC,MAAOC,EAAOxC,IAAKwC,EAAOrC,eAErG,OACIT,EAAAC,EAAAC,cAAA,QAAMM,UAAU,gBAAgBuD,SAAU9B,KAAKO,eAC3CxC,EAAAC,EAAAC,cAAA,gBACIF,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,OAAKM,UAAU,SACXR,EAAAC,EAAAC,cAAA,SAAO8D,QAAQ,mBACXhE,EAAAC,EAAAC,cAAA,kBAEJF,EAAAC,EAAAC,cAAA,SAAO+D,KAAK,OAAO3D,GAAG,kBAAkBsC,KAAK,OAAOsB,UAAQ,KAEhElE,EAAAC,EAAAC,cAAA,OAAKM,UAAU,SACXR,EAAAC,EAAAC,cAAA,SAAO8D,QAAQ,sBACXhE,EAAAC,EAAAC,cAAA,qBAEJF,EAAAC,EAAAC,cAAA,YAAUI,GAAG,qBAAqBsC,KAAK,cAAcsB,UAAQ,KAEjElE,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,UAAQ0C,KAAK,UAER/C,GAELG,EAAAC,EAAAC,cAAA,UAAQ+D,KAAK,UAAb,YAGC,IACDjE,EAAAC,EAAAC,cAAA,UAAQ+D,KAAK,SAASE,QAASlC,KAAKI,mBAApC,mBAzEEzB,IAAMsB,YAAtBE,EAKKD,YAAcxB,EA8EVyB,QCnFTgC,oNAIF/B,kBAAoB,WAChBjB,EAAKxB,MAAM0C,QAAQC,KAAK,QAG5B8B,gBAAkB,SAAC5B,GACfA,EAAEC,iBAEF,IAAMI,EAAS,CACXrC,YAAegC,EAAEE,OAAOG,OAAOD,OAGnCd,QAAQC,IAAIc,GAEZG,MAAK,wDAA0D,CAC3DC,OAAQ,OACRC,KAAMC,KAAKC,UAAUP,GACrBQ,QAAS,CACLC,eAAgB,sBAGvBC,KAAK,SAAAC,GACF,OAAKA,EAAIC,GAOFD,EAAIE,OALJF,EAAIE,OAAOH,KAAK,SAAAI,GAEnB,MAAMA,MAKbJ,KAAK,SAAAc,GACJlD,EAAKC,QAAQN,UAAUuD,GACvBlD,EAAKxB,MAAM0C,QAAQC,KAAnB,WAAAlC,OAAmCiE,EAAchE,OAElDwD,MAAM,SAAAF,GACL7B,QAAQ6B,MAAM,CAAEA,qFAKlB,OACI5D,EAAAC,EAAAC,cAAA,QAAMM,UAAU,YAAYuD,SAAU9B,KAAKoC,iBACvCrE,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,OAAKM,UAAU,SACXR,EAAAC,EAAAC,cAAA,SAAO8D,QAAQ,qBAAf,gBAGC,IACDhE,EAAAC,EAAAC,cAAA,SAAO+D,KAAK,OAAO3D,GAAG,oBAAoBsC,KAAK,SAASsB,UAAQ,KAEpElE,EAAAC,EAAAC,cAAA,OAAKM,UAAU,WACXR,EAAAC,EAAAC,cAAA,UAAQ+D,KAAK,UAAb,cAGC,IACDjE,EAAAC,EAAAC,cAAA,UAAQ+D,KAAK,SAASE,QAASlC,KAAKI,mBAApC,mBA3DIzB,IAAMsB,YAAxBkC,EAEKjC,YAAcxB,EAmEVyD,kBC/CMG,mLAIR,IAAAnD,EAAAa,KACHV,EAAOU,KAAKZ,QAAQP,MAAM0D,KAAK,SAAAjD,GAAI,OAAIA,EAAKjB,KAAOmB,OAAOL,EAAKxB,MAAM8B,MAAMC,OAAO8C,UAElFC,EAAe,IAAIC,KAAKpD,EAAKqD,cAIhC,OAHH7C,QAAQC,IAAIT,EAAKjB,IAITN,EAAAC,EAAAC,cAAA,WAASM,UAAU,gBACfR,EAAAC,EAAAC,cAAA,UAAKqB,EAAKM,WACV7B,EAAAC,EAAAC,cAAA,SAAIqB,EAAKwB,SACT/C,EAAAC,EAAAC,cAAA,SAAIwE,EAAaG,gBACjB7E,EAAAC,EAAAC,cAAA,UACI+D,KAAK,SACLE,QAAS,kBAxCFM,EAwC0BlD,EAAKjB,GAxCvBwE,EAwC2B1D,EAAKC,QAAQJ,WAxC9B8D,EAwC0C3D,EAAKxB,MAAM0C,QAAQC,KAAK,UAtC3GU,MAAK,uDAAA5C,OAAwDoE,GAAU,CACrEvB,OAAQ,SACRI,QAAS,CACP0B,eAAgB,sBAGjBxB,KAAK,SAAAC,GACJ,OAAKA,EAAIC,GAEFD,EADEA,EAAIE,OAAOH,KAAK,SAAAf,GAAC,OAAIwC,QAAQC,OAAOzC,OAG9Ce,KAAK,WACJsB,EAASL,GACTM,MAEDjB,MAAM,SAAAF,GACL7B,QAAQ6B,MAAM,CAAEA,YAlBxB,IAA2Ba,EAAQK,EAAUC,IAsC7B,uBAhBkBnE,IAAMsB,WAAnBqC,EAEVpC,YAAcxB,YCxBJwE,6MAGjBC,iBAAmB,WACfhE,EAAKxB,MAAM0C,QAAQ+C,YAGvBC,eAAiBlE,EAAKC,QAAQP,MAAM0D,KAAK,SAAAjD,GAAI,OAAKA,EAAKjB,KAAOmB,OAAOL,EAAKxB,MAAM8B,MAAMC,OAAO8C,YAE7Fc,WAAanE,EAAKC,QAAQxB,QAAQ2E,KAAK,SAAA1B,GAAM,OAAIA,EAAOxC,KAAOc,EAAKkE,eAAe9D,oFAM/E,OAHAO,QAAQC,IAAIC,KAAKZ,QAAQP,OACzBiB,QAAQC,IAAIC,KAAKqD,gBACjBvD,QAAQC,IAAIC,KAAKsD,YAEbvF,EAAAC,EAAAC,cAAA,OAAKM,UAAU,gBACXR,EAAAC,EAAAC,cAAA,UAAQiE,QAASlC,KAAKmD,kBAAtB,WACApF,EAAAC,EAAAC,cAAA,SAAI+B,KAAKsD,WAAW9E,qBAlBKG,IAAMsB,WAA1BiD,EACVhD,YAAcxB,ECJGC,IAAMsB,sBCgJnBsD,6MA/HbC,MAAQ,CACN5F,QAAS,GACTiB,MAAO,MA2BTC,UAAY,SAAA+B,GACV1B,EAAKsE,SAAS,CACZ7F,QAAO,GAAAQ,OAAAsF,OAAAC,EAAA,EAAAD,CAAMvE,EAAKqE,MAAM5F,SAAjB,CAA0BiD,SAIrC9B,QAAU,SAAAO,GACRH,EAAKsE,SAAS,CACZ5E,MAAK,GAAAT,OAAAsF,OAAAC,EAAA,EAAAD,CAAMvE,EAAKqE,MAAM3E,OAAjB,CAAwBS,SAIjCN,WAAa,SAAAwD,GACXrD,EAAKsE,SAAS,CACZ5E,MAAOM,EAAKqE,MAAM3E,MAAMQ,OAAO,SAAAC,GAAI,OAAIA,EAAKjB,KAAOmE,0FAtCnC,IAAAoB,EAAA5D,KAClBgD,QAAQa,IAAI,CACV7C,MAAK,oCACLA,MAAK,wCAEJO,KAAK,SAAAuC,GAA4B,IAAAC,EAAAL,OAAAM,EAAA,EAAAN,CAAAI,EAAA,GAA1BG,EAA0BF,EAAA,GAAhBG,EAAgBH,EAAA,GAChC,OAAKE,EAASxC,GAETyC,EAAWzC,GAGTuB,QAAQa,IAAI,CACjBI,EAASvC,OACTwC,EAAWxC,SAJJwC,EAAWxC,OAAOH,KAAK,SAAAf,GAAC,OAAIwC,QAAQC,OAAOzC,KAF3CyD,EAASvC,OAAOH,KAAK,SAAAf,GAAC,OAAIwC,QAAQC,OAAOzC,OASnDe,KAAK,SAAA4C,GAAsB,IAAAC,EAAAV,OAAAM,EAAA,EAAAN,CAAAS,EAAA,GAApBtF,EAAoBuF,EAAA,GAAbxG,EAAawG,EAAA,GAC1BR,EAAKH,SAAS,CAAE5E,QAAOjB,cAExBiE,MAAM,SAAAF,GACL7B,QAAQ6B,MAAM,CAAEA,6CAsBb,IAAA0C,EAAArE,KACPF,QAAQC,IAAIC,KAAKwD,MAAM3E,MAAMhB,IAAI,SAAAyB,GAAI,OAAIA,EAAKjB,MAE9C,IAAMiG,EAAe,CACnB1G,QAASoC,KAAKwD,MAAM5F,QACpBiB,MAAOmB,KAAKwD,MAAM3E,MAClBC,UAAWkB,KAAKlB,UAChBC,QAASiB,KAAKjB,QACdC,WAAYgB,KAAKhB,YAGnB,OACEjB,EAAAC,EAAAC,cAACsG,EAAeC,SAAhB,CACE5D,MAAO0D,GAEPvG,EAAAC,EAAAC,cAAA,OAAKM,UAAU,OAEbR,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAMN,GAAG,KAAT,aAIJJ,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CACEC,OAAK,EAACC,KAAK,IACXC,OAAQ,kBACN7G,EAAAC,EAAAC,cAAC4G,EAAD,CACEjH,QAASyG,EAAKb,MAAM5F,aAK1BG,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CACEE,KAAK,UACLC,OAAQ,kBACN7G,EAAAC,EAAAC,cAAC4G,EAAD,CACEjH,QAASyG,EAAKb,MAAM5F,aAK1BG,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CACEE,KAAK,gBACLG,UAAW5B,IAGbnF,EAAAC,EAAAC,cAAA,QAAMM,UAAU,OAEdR,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CACEC,OAAK,EAACC,KAAK,IACXG,UAAW7F,IAGblB,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CACEE,KAAK,oBACLG,UAAW7F,IAGblB,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CACEE,KAAK,gBACLG,UAAWxC,IAGbvE,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CACEE,KAAK,YACLG,UAAW3E,IAGbpC,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CACEE,KAAK,cACLG,UAAW3C,cAvHPxD,IAAMsB,2BCVxB8E,IAASH,OACL7G,EAAAC,EAAAC,cAAC+G,EAAA,EAAD,KACIjH,EAAAC,EAAAC,cAACgH,EAAD,OAEJC,SAASC,eAAe","file":"static/js/main.1c2d7b7e.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Sidebar.css';\r\n\r\nimport { NavLink, Link } from 'react-router-dom';\r\n\r\nfunction Sidebar(props) {\r\n\r\n    const folders = props.folders.map(file => (\r\n        <NavLink to={`/folder/${file.id}`} key={file.id}>\r\n            <li\r\n                key={file.id}\r\n                className=\"Folders\"\r\n            >\r\n                {file.folder_name}\r\n            </li>\r\n        </NavLink>\r\n    ))\r\n\r\n    return (\r\n        <div id=\"sidebar\">\r\n            <ul>\r\n                {folders}\r\n            </ul>\r\n            <Link to='/add-folder'>Add Folder</Link>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Sidebar;","import React from 'react';\r\n\r\nconst NotefulContext = React.createContext({\r\n    folders: [],\r\n    notes: [],\r\n    addFolder: () => {},\r\n    addNote: () => {},\r\n    deleteNote: () => {},\r\n})\r\n\r\nexport default NotefulContext;","import React from 'react';\r\nimport './NotesList.css'\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport NotefulContext from '../NotefulContext/NotefulContext';\r\n\r\nclass NotesList extends React.Component {\r\n\r\n    static contextType = NotefulContext;\r\n\r\n    filteredNotes = () => this.context.notes.filter(note => note.folder_id === Number(this.props.match.params.folderId) ).map( note => (\r\n        <li\r\n            key={note.id}\r\n        >\r\n            <Link to={`/note/${note.id}`}><h2>{note.note_name}</h2></Link>\r\n            <Link to={`/note/${note.id}`}><button>Delete?</button></Link>\r\n            \r\n        </li>\r\n    ))\r\n\r\n    notes = () => {\r\n        if(this.props.match.params.folderId === undefined) {\r\n            return this.context.notes.map( note => (\r\n                <li\r\n                    key={note.id}\r\n                >\r\n                    <Link to={`/note/${note.id}`}><h2>{note.note_name}</h2></Link>\r\n                    <Link to={`/note/${note.id}`}><button>Delete?</button></Link>\r\n                </li>\r\n            ))} else {\r\n                return this.filteredNotes()\r\n            }\r\n    }\r\n        \r\n    \r\n    render() {\r\n        console.log(typeof this.props.match.params.folderId)\r\n        console.log(this.context.notes.map(note => typeof note.folder_id))\r\n        \r\n        return (\r\n            <section >\r\n                <ul className=\"list-container\">\r\n                    {this.notes()}\r\n                </ul>\r\n                <Link to='/add-note'>Add Note</Link>\r\n            </section>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default NotesList;","import React from 'react';\r\nimport './AddNote.css'\r\n\r\nimport NotefulContext from '../NotefulContext/NotefulContext';\r\n\r\nclass AddNote extends React.Component {\r\n    handleClickCancel = () => {\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    static contextType = NotefulContext;\r\n\r\n    submitNewNote = (e) => {\r\n        e.preventDefault();\r\n        \r\n        const note = {\r\n            \"note_name\": e.target.name.value,\r\n            \"folder_id\": e.target.folder.value,\r\n            \"content\": e.target.description.value\r\n        }\r\n\r\n        console.log(note)\r\n\r\n        fetch(`https://sleepy-meadow-67516.herokuapp.com/api/notes`, {\r\n            method: 'POST',\r\n            body: JSON.stringify(note),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(res => {\r\n            if (!res.ok) {\r\n            // get the error message from the response,\r\n            return res.json().then(error => {\r\n                // then throw it\r\n                throw error\r\n            })\r\n            }\r\n            return res.json()\r\n        })\r\n        .then(data => {\r\n          this.context.addNote(data)\r\n          this.props.history.push(`/folder/${data.folder_id}`)\r\n        })\r\n        .catch(error => {\r\n          console.error({ error })\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        \r\n        const folders = this.context.folders.map(folder => <option key={folder.id} value={folder.id}>{folder.folder_name}</option>)\r\n\r\n        return (\r\n            <form className=\"add-note-form\" onSubmit={this.submitNewNote}>\r\n                <fieldset>\r\n                    <legend>Create a note</legend>\r\n                    <div className='field'>\r\n                        <label htmlFor='note-name-input'>\r\n                            <p>Name</p>\r\n                        </label>\r\n                        <input type='text' id='note-name-input' name='name' required/>\r\n                    </div>\r\n                    <div className='field'>\r\n                        <label htmlFor='note-content-input'>\r\n                            <p>Content</p>\r\n                        </label>\r\n                        <textarea id='note-content-input' name='description' required/>\r\n                    </div>\r\n                    <p>Store in folder:</p>\r\n                    <select name='folder'>\r\n                        \r\n                        {folders}\r\n                    </select>\r\n                    <button type='submit'>\r\n                        Add note\r\n                    </button>\r\n                    {' '}\r\n                    <button type='submit' onClick={this.handleClickCancel}>\r\n                        Cancel\r\n                    </button>\r\n                </fieldset>\r\n            </form>\r\n        \r\n        )\r\n    }\r\n}\r\n\r\nexport default AddNote;","import React from 'react';\r\nimport './AddFolder.css'\r\n\r\nimport NotefulContext from '../NotefulContext/NotefulContext';\r\n\r\nclass AddFolder extends React.Component {\r\n\r\n    static contextType = NotefulContext;\r\n\r\n    handleClickCancel = () => {\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    submitNewFolder = (e) => {\r\n        e.preventDefault();\r\n        \r\n        const folder = {\r\n            \"folder_name\": e.target.folder.value,\r\n        }\r\n\r\n        console.log(folder)\r\n\r\n        fetch(`https://sleepy-meadow-67516.herokuapp.com/api/folders`, {\r\n            method: 'POST',\r\n            body: JSON.stringify(folder),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(res => {\r\n            if (!res.ok) {\r\n            // get the error message from the response,\r\n            return res.json().then(error => {\r\n                // then throw it\r\n                throw error\r\n            })\r\n            }\r\n            return res.json()\r\n        })\r\n        .then(folderDataRes => {\r\n          this.context.addFolder(folderDataRes)\r\n          this.props.history.push(`/folder/${folderDataRes.id}`)\r\n        })\r\n        .catch(error => {\r\n          console.error({ error })\r\n        })\r\n    }\r\n      \r\n    render() {\r\n        return (\r\n            <form className='AddFolder' onSubmit={this.submitNewFolder}>\r\n                <h2>Create a folder</h2>\r\n                <div className='field'>\r\n                    <label htmlFor='folder-name-input'>\r\n                        Folder Name:\r\n                    </label>\r\n                    {' '}\r\n                    <input type='text' id='folder-name-input' name='folder' required/>\r\n                </div>\r\n                <div className='buttons'>\r\n                    <button type='submit'>\r\n                        Add folder\r\n                    </button>\r\n                    {' '}\r\n                    <button type='submit' onClick={this.handleClickCancel}>\r\n                        Cancel\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        ) \r\n    }\r\n    \r\n}\r\n\r\nexport default AddFolder;","import React from 'react';\r\nimport './Note.css'\r\n\r\nimport NotefulContext from '../NotefulContext/NotefulContext';\r\n\r\nfunction handleClickDelete(noteId, callback, goback) {\r\n  \r\n    fetch(`https://sleepy-meadow-67516.herokuapp.com/api/notes/${noteId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      },\r\n    })\r\n      .then(res => {\r\n        if (!res.ok)\r\n          return res.json().then(e => Promise.reject(e))\r\n        return res//.json() Here json() is removed because when you receive an empty response (without payload) you don't need to call the json method\r\n      })\r\n      .then(() => {\r\n        callback(noteId)\r\n        goback()\r\n      })\r\n      .catch(error => {\r\n        console.error({ error })\r\n      })\r\n  }\r\n\r\nexport default class Note extends React.Component {\r\n\r\n    static contextType = NotefulContext;\r\n\r\n    render() {\r\n    const note = this.context.notes.find(note => note.id === Number(this.props.match.params.noteId))    \r\n\r\n    const modifiedDate = new Date(note.date_created);\r\n    console.log(note.id)\r\n\r\n    \r\n       return (\r\n            <section className=\"note-content\">\r\n                <h2>{note.note_name}</h2>\r\n                <p>{note.content}</p>\r\n                <p>{modifiedDate.toDateString()}</p>\r\n                <button\r\n                    type='button'\r\n                    onClick={() => handleClickDelete(note.id, this.context.deleteNote, this.props.history.push('/') )}\r\n                >Delete Note</button>\r\n            </section>\r\n        ) \r\n    }\r\n    \r\n}","import React from 'react';\r\nimport './SidebarNote.css'\r\n\r\nimport NotefulContext from '../NotefulContext/NotefulContext';\r\n\r\nexport default class SidebarNote extends React.Component {\r\n    static contextType = NotefulContext;\r\n\r\n    handleBackCancel = () => {\r\n        this.props.history.goBack()\r\n      }\r\n      \r\n    findFolderName = this.context.notes.find(note => (note.id === Number(this.props.match.params.noteId)))\r\n        \r\n    folderName = this.context.folders.find(folder => folder.id === this.findFolderName.folder_id)\r\n        \r\n    render() {\r\n        console.log(this.context.notes)\r\n        console.log(this.findFolderName)\r\n        console.log(this.folderName)\r\n        return (\r\n            <div className=\"sidebar-note\">\r\n                <button onClick={this.handleBackCancel} >Go back</button>\r\n                <p>{this.folderName.folder_name}</p>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}","import React from 'react';\r\n\r\nclass ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          hasError: false\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromError(error) {\r\n        return { hasError: true };\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {      \r\n            return (\r\n                <h2 className=\"error-boundary\" >Your request could not be made at this time.</h2>\r\n            );\r\n        }\r\n        return this.props.children;\r\n    }  \r\n}\r\n\r\nexport default ErrorBoundary;","import React from 'react';\r\nimport './App.css';\r\n\r\nimport STORE from './STORE';\r\n\r\nimport Sidebar from './Sidebar/Sidebar';\r\nimport NotesList from './NotesList/NotesList';\r\nimport AddNote from './AddNote/AddNote';\r\nimport AddFolder from './AddFolder/AddFolder'\r\nimport Note from './Note/Note';\r\nimport SidebarNote from './SidebarNote/SidebarNote';\r\n\r\nimport NotefulContext from './NotefulContext/NotefulContext';\r\nimport ErrorBoundary from './ErrorBoundary/ErrorBoundary';\r\n\r\nimport { Route, Link } from 'react-router-dom';\r\n\r\nclass App extends React.Component {\r\n\r\n  state = {\r\n    folders: [],\r\n    notes: [],\r\n  }\r\n\r\n  componentDidMount() {\r\n    Promise.all([\r\n      fetch(`http://localhost:8000/api/notes/`),\r\n      fetch(`http://localhost:8000/api/folders/`)\r\n    ])\r\n      .then(([notesRes, foldersRes]) => {\r\n        if (!notesRes.ok)\r\n          return notesRes.json().then(e => Promise.reject(e))\r\n        if (!foldersRes.ok)\r\n          return foldersRes.json().then(e => Promise.reject(e))\r\n\r\n        return Promise.all([\r\n          notesRes.json(),\r\n          foldersRes.json(),\r\n        ])\r\n      })\r\n      .then(([notes, folders]) => {\r\n        this.setState({ notes, folders })\r\n      })\r\n      .catch(error => {\r\n        console.error({ error })\r\n      })\r\n  }\r\n\r\n  addFolder = folder => {\r\n    this.setState({\r\n      folders: [...this.state.folders, folder]\r\n    })\r\n  }\r\n\r\n  addNote = note => {\r\n    this.setState({\r\n      notes: [...this.state.notes, note]\r\n    })\r\n  }\r\n\r\n  deleteNote = noteId => {\r\n    this.setState({\r\n      notes: this.state.notes.filter(note => note.id !== noteId)\r\n    })\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state.notes.map(note => note.id))\r\n\r\n    const contextValue = {\r\n      folders: this.state.folders,\r\n      notes: this.state.notes,\r\n      addFolder: this.addFolder,\r\n      addNote: this.addNote,\r\n      deleteNote: this.deleteNote,\r\n    } \r\n\r\n    return (\r\n      <NotefulContext.Provider\r\n        value={contextValue}  \r\n      >\r\n        <div className=\"App\">\r\n\r\n          <header>\r\n            <h1>\r\n              <Link to='/'>Noteful</Link>\r\n            </h1>\r\n          </header>\r\n          \r\n          <Route\r\n            exact path='/'\r\n            render={() => (\r\n              <Sidebar\r\n                folders={this.state.folders}\r\n              />\r\n            )}\r\n          />\r\n\r\n          <Route\r\n            path='/folder'\r\n            render={() => (\r\n              <Sidebar\r\n                folders={this.state.folders}\r\n              />\r\n            )}\r\n          />\r\n\r\n          <Route\r\n            path='/note/:noteId'\r\n            component={SidebarNote}\r\n          />\r\n\r\n          <main className='App'>\r\n          \r\n            <Route\r\n              exact path=\"/\"\r\n              component={NotesList}\r\n            />\r\n\r\n            <Route\r\n              path=\"/folder/:folderId\"\r\n              component={NotesList}\r\n            />\r\n\r\n            <Route\r\n              path=\"/note/:noteId\"\r\n              component={Note}\r\n            />\r\n\r\n            <Route\r\n              path=\"/add-note\"\r\n              component={AddNote}\r\n            />\r\n\r\n            <Route\r\n              path=\"/add-folder\"\r\n              component={AddFolder}\r\n            />\r\n          </main>\r\n\r\n        </div>\r\n      </NotefulContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>,\r\n    document.getElementById('root'));"],"sourceRoot":""}